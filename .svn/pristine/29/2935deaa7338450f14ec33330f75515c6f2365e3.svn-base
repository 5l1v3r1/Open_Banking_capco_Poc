!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms"),require("@angular/core"),require("@ngx-formly/material/form-field"),require("@angular/material/checkbox"),require("@angular/cdk/a11y")):"function"==typeof define&&define.amd?define("@ngx-formly/material/checkbox",["exports","@angular/common","@ngx-formly/core","@angular/forms","@angular/core","@ngx-formly/material/form-field","@angular/material/checkbox","@angular/cdk/a11y"],o):o((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].material=e["ngx-formly"].material||{},e["ngx-formly"].material.checkbox={}),e.ng.common,e.core,e.ng.forms,e.ng.core,e["ngx-formly"].material["form-field"],e.ng.material.checkbox,e.ng.cdk.a11y)}(this,function(e,o,t,r,n,i,a,l){"use strict";var c=function(e,o){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var t in o)o.hasOwnProperty(t)&&(e[t]=o[t])})(e,o)};var f=function(t){function e(e){var o=t.call(this)||this;return o.focusMonitor=e,o.defaultOptions={templateOptions:{hideFieldUnderline:!0,indeterminate:!0,floatLabel:"always",hideLabel:!0,align:"start"}},o}return function r(e,o){function t(){this.constructor=e}c(e,o),e.prototype=null===o?Object.create(o):(t.prototype=o.prototype,new t)}(e,t),e.prototype.onContainerClick=function(e){this.checkbox.focus(),t.prototype.onContainerClick.call(this,e)},e.prototype.ngAfterViewInit=function(){var o=this;t.prototype.ngAfterViewInit.call(this),this.focusMonitor.monitor(this.checkbox._inputElement.nativeElement).subscribe(function(e){return o.field.focus=!!e})},e.prototype.ngOnDestroy=function(){t.prototype.ngOnDestroy.call(this),this.focusMonitor.stopMonitoring(this.checkbox._inputElement.nativeElement)},e.decorators=[{type:n.Component,args:[{selector:"formly-field-mat-checkbox",template:'\n    <mat-checkbox\n      [formControl]="formControl"\n      [id]="id"\n      [formlyAttributes]="field"\n      [tabindex]="to.tabindex || 0"\n      [indeterminate]="to.indeterminate && formControl.value === null"\n      [color]="to.color"\n      [labelPosition]="to.align || to.labelPosition">\n      {{ to.label }}\n      <span *ngIf="to.required && to.hideRequiredMarker !== true" class="mat-form-field-required-marker">*</span>\n    </mat-checkbox>\n  '}]}],e.ctorParameters=function(){return[{type:l.FocusMonitor}]},e.propDecorators={checkbox:[{type:n.ViewChild,args:[a.MatCheckbox]}]},e}(i.FieldType),u=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[f],imports:[o.CommonModule,r.ReactiveFormsModule,a.MatCheckboxModule,i.FormlyMatFormFieldModule,t.FormlyModule.forChild({types:[{name:"checkbox",component:f,wrappers:["form-field"]}]})]}]}],e}();e.FormlyMatCheckboxModule=u,e.FormlyFieldCheckbox=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-material-checkbox.umd.min.js.map