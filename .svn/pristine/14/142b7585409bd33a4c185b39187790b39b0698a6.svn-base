{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-formly/core/json-schema/formly-json-schema.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","isEmpty","v","undefined","FormlyJsonschema","toFieldConfig","schema","options","_toFieldConfig","_this","$ref","resolveDefinition","field","type","guessType","defaultValue","default","templateOptions","label","title","readonly","readOnly","description","parsers","Number","min","minimum","max","maximum","addValidator","c","exclusiveMinimum","exclusiveMaximum","step","multipleOf","forEach","prop","fieldGroup","_a","resolveDependencies","propDeps_1","schemaDeps_1","keys","properties","key","f","Array","isArray","required","indexOf","expressionProperties","templateOptions.required","some","k","hideExpression","defineProperty","get","items","itemSchema","additionalItems","enumerable","configurable","enum","map","formlyConfig","reverseDeepMerge","split","uri","pointer","Error","definition","reduce","def","path","annotation","deps","schemaDeps","dependencies","dependency","dep","name","validator","validators","Injectable","args","providedIn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { ÉµreverseDeepMerge as reverseDeepMerge } from '@ngx-formly/core';\nimport { AbstractControl } from '@angular/forms';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\nfunction isEmpty(v) {\n  return v === '' || v === undefined || v === null;\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, options: IOptions): FormlyFieldConfig {\n    if (schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    let field: FormlyFieldConfig = {\n      type: this.guessType(schema),\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    switch (field.type) {\n      case 'number':\n      case 'integer': {\n        field.parsers = [v => isEmpty(v) ? null : Number(v)];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          this.addValidator(field, 'exclusiveMinimum', c => isEmpty(c.value) || (c.value > schema.exclusiveMinimum));\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          this.addValidator(field, 'exclusiveMaximum', c => isEmpty(c.value) || (c.value < schema.exclusiveMaximum));\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', c => isEmpty(c.value) || (c.value % schema.multipleOf === 0));\n        }\n        break;\n      }\n      case 'string': {\n        ['minLength', 'maxLength', 'pattern'].forEach(prop => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach(key => {\n          const f = this._toFieldConfig(<JSONSchema7> schema.properties[key], options);\n          field.fieldGroup.push(f);\n          f.key = key;\n          if (Array.isArray(schema.required) && schema.required.indexOf(key) !== -1) {\n            f.templateOptions.required = true;\n          }\n          if (!f.templateOptions.required && propDeps[key]) {\n            f.expressionProperties = {\n              'templateOptions.required': m => m && propDeps[key].some(k => !isEmpty(m[k])),\n            };\n          }\n\n          if (schemaDeps[key]) {\n            field.fieldGroup.push({\n              ...this._toFieldConfig(schemaDeps[key], options),\n              hideExpression: m => !m || isEmpty(m[key]),\n            });\n          }\n        });\n        break;\n      }\n      case 'array': {\n        field.fieldGroup = [];\n        Object.defineProperty(field, 'fieldArray', {\n          get: () => {\n            if (!Array.isArray(schema.items)) {\n              // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n              return this._toFieldConfig(<JSONSchema7> schema.items, options);\n            }\n\n            const itemSchema = schema.items[field.fieldGroup.length]\n              ? schema.items[field.fieldGroup.length]\n              : schema.additionalItems;\n\n            return itemSchema\n              ? this._toFieldConfig(<JSONSchema7> itemSchema, options)\n              : null;\n          },\n          enumerable: true,\n          configurable: true,\n        });\n        break;\n      }\n    }\n\n    if (schema.enum) {\n      field.type = 'enum';\n      field.templateOptions.options = schema.enum.map(value => ({ value, label: value }));\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = reverseDeepMerge(schema['widget'].formlyConfig, field);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer ? null : pointer.split('/').reduce(\n      (def, path) => def && def.hasOwnProperty(path) ? def[path] : null,\n      options.schema,\n    );\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach(prop => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach(dep => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessType(schema: JSONSchema7) {\n    const type = schema.type as JSONSchema7TypeName;\n    if (!type && schema.properties) {\n      return 'object';\n    }\n\n    return type;\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: (control: AbstractControl) => boolean) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n}\n"]}