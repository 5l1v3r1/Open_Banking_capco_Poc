{"version":3,"file":"ngx-formly-material-select.js.map","sources":["ng://@ngx-formly/material/select/select.type.ts","ng://@ngx-formly/material/select/select.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { FieldType } from '@ngx-formly/material/form-field';\n\n@Component({\n  selector: 'formly-field-mat-select',\n  template: `\n    <ng-template #selectAll let-selectOptions=\"selectOptions\">\n      <mat-option (click)=\"toggleSelectAll(selectOptions)\">\n        <mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\"\n          [state]=\"getState(selectOptions)\">\n        </mat-pseudo-checkbox>\n        {{ to.selectAllOption }}\n      </mat-option>\n    </ng-template>\n\n\n    <mat-select [id]=\"id\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [tabindex]=\"to.tabindex || 0\"\n      [compareWith]=\"to.compareWith || compareWith\"\n      [multiple]=\"to.multiple\"\n      (selectionChange)=\"change($event)\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [aria-labelledby]=\"formField?._labelId\"\n      [disableOptionCentering]=\"to.disableOptionCentering\"\n      >\n      <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as selectOptions\">\n        <ng-container *ngIf=\"to.multiple && to.selectAllOption\" [ngTemplateOutlet]=\"selectAll\" [ngTemplateOutletContext]=\"{ selectOptions: selectOptions }\">\n        </ng-container>\n        <ng-container *ngFor=\"let item of selectOptions\">\n          <mat-optgroup *ngIf=\"item.group\" [label]=\"item.label\">\n            <mat-option *ngFor=\"let child of item.group\" [value]=\"child.value\" [disabled]=\"child.disabled\">\n              {{ child.label }}\n            </mat-option>\n          </mat-optgroup>\n          <mat-option *ngIf=\"!item.group\" [value]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</mat-option>\n        </ng-container>\n      </ng-container>\n    </mat-select>\n  `,\n})\nexport class FormlyFieldSelect extends FieldType {\n  defaultOptions = {\n    templateOptions: { options: [] },\n  };\n\n  get value() { return this.formControl.value || []; }\n  getState(options: any[]) {\n    if (this.value.length > 0) {\n      return this.value.length !== options.length\n        ? 'indeterminate'\n        : 'checked';\n    }\n\n    return '';\n  }\n\n  toggleSelectAll(options: any[]) {\n    this.formControl.setValue(\n      this.value.length !== options.length\n        ? options.map(x => x.value)\n        : [],\n    );\n  }\n\n  change($event: MatSelectChange) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n  }\n\n  compareWith(o1: any, o2: any) {\n    return o1 === o2;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { FormlyFieldSelect } from './select.type';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [FormlyFieldSelect],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatPseudoCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'select',\n        component: FormlyFieldSelect,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatSelectModule { }\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MA4Ca,iBAAkB,SAAQ,SAAS;IAxChD;;QAyCE,mBAAc,GAAG;YACf,eAAe,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;SACjC,CAAC;KA8BH;;;;IA5BC,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE;;;;;IACpD,QAAQ,CAAC,OAAc;QACrB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;kBACvC,eAAe;kBACf,SAAS,CAAC;SACf;QAED,OAAO,EAAE,CAAC;KACX;;;;;IAED,eAAe,CAAC,OAAc;QAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,CACvB,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;cAChC,OAAO,CAAC,GAAG;;;;YAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAC;cACzB,EAAE,CACP,CAAC;KACH;;;;;IAED,MAAM,CAAC,MAAuB;QAC5B,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACpC;KACF;;;;;;IAED,WAAW,CAAC,EAAO,EAAE,EAAO;QAC1B,OAAO,EAAE,KAAK,EAAE,CAAC;KAClB;;;YAxEF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCT;aACF;;;;;;;AC3CD,MA+Ba,qBAAqB;;;YAnBjC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACjC,OAAO,EAAE;oBACP,YAAY;oBACZ,mBAAmB;oBACnB,eAAe;oBACf,uBAAuB;oBAEvB,wBAAwB;oBACxB,kBAAkB;oBAClB,YAAY,CAAC,QAAQ,CAAC;wBACpB,KAAK,EAAE,CAAC;gCACN,IAAI,EAAE,QAAQ;gCACd,SAAS,EAAE,iBAAiB;gCAC5B,QAAQ,EAAE,CAAC,YAAY,CAAC;6BACzB,CAAC;qBACH,CAAC;iBACH;aACF;;;;;;;;;;;;;;;"}
